{
	"info": {
		"_postman_id": "df422f6e-9dc4-400e-a018-6d4ac2bc379d",
		"name": "reqres_users_test",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "36008228"
	},
	"item": [
		{
			"name": "status_code",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{api_url}}/users",
					"host": [
						"{{api_url}}"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Quantity pages",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Quantity pages == 2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData['total_pages']).to.eql(2);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{api_url}}/users",
					"host": [
						"{{api_url}}"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "current_page_1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Current page is 1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData['page']).to.eql(1);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{api_url}}/users?page=1",
					"host": [
						"{{api_url}}"
					],
					"path": [
						"users"
					],
					"query": [
						{
							"key": "page",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "current_page_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Current page is 2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData['page']).to.eql(2);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{api_url}}/users?page=2",
					"host": [
						"{{api_url}}"
					],
					"path": [
						"users"
					],
					"query": [
						{
							"key": "page",
							"value": "2"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "current_page_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Data is empty on page 3\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData['data']).to.empty;\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{api_url}}/users?page=3",
					"host": [
						"{{api_url}}"
					],
					"path": [
						"users"
					],
					"query": [
						{
							"key": "page",
							"value": "3"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Response_time",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{api_url}}/users",
					"host": [
						"{{api_url}}"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Body_contains_id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Body contains person id\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[\"data\"][0].id).to.eql(1);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{api_url}}/users",
					"host": [
						"{{api_url}}"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "User_by_id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Data contains info about users ID\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[\"data\"].id).to.eql(3);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{api_url}}/users/3",
					"host": [
						"{{api_url}}"
					],
					"path": [
						"users",
						"3"
					]
				}
			},
			"response": []
		},
		{
			"name": "several elements",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Several elements test\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData['data']).to.keys; // keys is exists\r",
							"    pm.expect(jsonData[\"data\"][0].id).to.eql(1); // first key with id 1\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{api_url}}/users",
					"host": [
						"{{api_url}}"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Content-Type",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Content-Type header is application/json\", () => {\r",
							"    console.log(pm.response.headers);\r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json; charset=utf-8');\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{api_url}}/users",
					"host": [
						"{{api_url}}"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "api_url",
			"value": "https://reqres.in/api",
			"type": "string"
		}
	]
}